다음 문제를 두가지 방식으로 풀이해봤고, 이후 다른 사람 풀이 3가지를 더 추가했다. 

1. 수식 풀이로 통일성을 주기 위해서 다음과 같이 표현해봤다. 만약 받는 숫자가 4자리라면 (num2/1000)%10을 해주면 된다. 
import java.io.*;

public class Main {

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

        int num1 = Integer.parseInt(br.readLine());
        int num2 = Integer.parseInt(br.readLine());

        bw.write(num1*((num2/1)%10)+"\n");
        bw.write(num1*((num2/10)%10)+"\n");
        bw.write(num1*((num2/100)%10)+"\n");
        bw.write(num1*num2+"");

        bw.flush();
        bw.close();
    }
}

2. 문자열을 substring 함수를 통해 잘라서 처리했다.
import java.io.*;

public class Main {

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

        int num1 = Integer.parseInt(br.readLine());
        String str = br.readLine();

        bw.write(num1*Integer.parseInt(str.substring(2,3))+"\n");
        bw.write(num1*Integer.parseInt(str.substring(1,2))+"\n");
        bw.write(num1*Integer.parseInt(str.substring(0,1))+"\n");
        bw.write(num1*Integer.parseInt(str)+"");

        bw.flush();
        bw.close();
    }
}

3. 비슷한 방법으로 더 간단하게 charAt 함수를 이용한 후 -'0'을 해주므로써 해당 값이 도출되게 했다.
import java.io.*;

public class Main {

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

        int num1 = Integer.parseInt(br.readLine());
        String str = br.readLine();


        bw.write(num1*(str.charAt(2)-'0')+"\n");
        bw.write(num1*(str.charAt(1)-'0')+"\n");
        bw.write(num1*(str.charAt(0)-'0')+"\n");
        bw.write(num1*Integer.parseInt(str)+"");

        bw.flush();
        bw.close();

    }
}

4. 비슷한 방법으로 toCharArray를 통해 처리했다.
import java.io.*;

public class Main {

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

        int num1 = Integer.parseInt(br.readLine());
        String str = br.readLine();

        char[] num2 = str.toCharArray();

        bw.write(num1*(num2[2]-'0')+"\n");
        bw.write(num1*(num2[1]-'0')+"\n");
        bw.write(num1*(num2[0]-'0')+"\n");
        bw.write(num1*Integer.parseInt(str)+"");

        bw.flush();
        bw.close();
    }
}

5. StringBuilder를 이용해 처리했다.
import java.io.*;

public class Main {

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        int num1 = Integer.parseInt(br.readLine());
        int num2 = Integer.parseInt(br.readLine());

        br.close();

        StringBuilder sb = new StringBuilder();

        sb.append(num1*((num2/1)%10));
        sb.append("\n");

        sb.append(num1*((num2/10)%10));
        sb.append("\n");

        sb.append(num1*((num2/100)%10));
        sb.append("\n");

        sb.append(num1*num2);

        System.out.println(sb);
    }
}


-> StringBuilder와 BufferedReader의 차이
